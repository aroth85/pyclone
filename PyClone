#!/usr/bin/env python

#=======================================================================================================================
# PyClone
# Author : Andrew Roth
#=======================================================================================================================
import argparse

from pyclone.run import cluster_trace, run_dp_model

parser = argparse.ArgumentParser(prog='PyClone')

parser.add_argument('--version', action='version', version='PyClone-0.10.0')

subparsers = parser.add_subparsers()

#---------------------------------------------------------------------------------------------------------------------- 
analyse_parser = subparsers.add_parser('analyse', help='''Start a new PyClone analysis.''')

analyse_parser.add_argument('in_file',
                            help='Path to tab separated input file. See examples for format.')

analyse_parser.add_argument('out_dir',
                            help='Path where trace files for MCMC sampler will be written.')

analyse_parser.add_argument('--num_iters', default=10000, type=int,
                            help='''How many iterations of the MCMC chain will run. Default 10,000.''')

analyse_parser.add_argument('--concentration', default=None, type=int,
                            help='''Concentration (alpha) value for DP sampler. If not set it will be estimated. Default
                            estimated.''')

analyse_parser.add_argument('--tumour_content', default=1, type=float,
                            help='''The fraction of the cancer cells in the sample. Default 1.''')

analyse_parser.add_argument('--seed', default=None, type=int,
                            help='''Set random seed so results can be reproduced. By default a random seed is
                            chosen.''')

analyse_parser.add_argument('--concentration_prior_shape', default=1, type=float,
                            help='''Prior on the shape parameter in the prior for the concentration parameter. Default
                            1.''')

analyse_parser.add_argument('--concentration_prior_rate', default=1, type=float,
                            help='''Prior on the rate parameter in the prior for the concentration parameter. Default
                            1.''')

analyse_parser.add_argument('--error_rate', default=1e-3, type=float,
                            help='''Error rate of sequencing. Default 1e-3.''')

analyse_parser.set_defaults(func=run_dp_model)

#---------------------------------------------------------------------------------------------------------------------- 
cluster_parser = subparsers.add_parser('cluster', help='''Cluster the results of a PyClone analysis.''')

cluster_parser.add_argument('trace_dir',
                            help='Path to directory where the PyClone analysis trace was written.')

cluster_parser.add_argument('out_file',
                            help='Path to file where clustering results will be written.')

cluster_parser.add_argument('--method', default='mpear', 
                            choices=['affinity_propogation', 'complete_linkage', 'dbscan', 'dynamic_tree_cut', 'mpear', 
                                    'single_linkage', 'spectral_clustering'],
                            help='''Method used to cluster the PyClone trace file. Default is mpear.''')

cluster_parser.add_argument('--burnin', default=0, type=int,
                            help='''Number of samples to discard as burning for the MCMC chain. Default is 0.''')

cluster_parser.add_argument('--thin', default=1, type=int,
                            help='''Number of samples to thin MCMC trace. For example if thin=10 every tenth sample
                            after burning will be used for inference. Default is 1.''')

cluster_parser.set_defaults(func=cluster_trace)

#---------------------------------------------------------------------------------------------------------------------- 

analyse_parser.set_defaults(func=run_dp_model)

args = parser.parse_args()

args.func(args)
