#!/usr/bin/env python

#=======================================================================================================================
# PyClone
# Author : Andrew Roth
#=======================================================================================================================
import argparse

from pyclone.run import run_dp_model, resume_dp_model, post_process_trace

parser = argparse.ArgumentParser(prog='PyClone')

parser.add_argument('--version', action='version', version='PyClone-0.4.1')

subparsers = parser.add_subparsers()

#---------------------------------------------------------------------------------------------------------------------- 
analyse_parser = subparsers.add_parser('analyse', help='''Start a new PyClone analysis.''')

analyse_parser.add_argument('in_file',
                            help='Path to tab separated input file. See examples for format.')

analyse_parser.add_argument('trace_file',
                            help='Path where trace file for MCMC sampler will be written.')

analyse_parser.add_argument('--num_iters', default=10000, type=int,
                            help='''How many iterations the MCMC chain will run. Default 10,000.''')

analyse_parser.add_argument('--concentration', default=None, type=int,
                            help='''Concentration (alpha) value for DP sampler. It not set will be estimated. Default
                            estimated.''')

analyse_parser.set_defaults(func=run_dp_model)

#---------------------------------------------------------------------------------------------------------------------- 
resume_parser = subparsers.add_parser('resume', help='''Resume a previous PyClone analysis.''')

resume_parser.add_argument('trace_file',
                            help='Path to previous created trace file. New results will be appended here.')

resume_parser.add_argument('--num_iters', default=10000, type=int,
                            help='''How many more iterations of the MCMC chain will run. Default is 10,000.''')

resume_parser.set_defaults(func=resume_dp_model)

#----------------------------------------------------------------------------------------------------------------------
pp_parser = subparsers.add_parser('post_process', help='''Post-process a PyClone analysis.''') 

pp_parser.add_argument('trace_file',
                        help='Path to trace file to post-process.')

pp_parser.add_argument('out_dir',
                       help='''Path to folder where post-processed trace files will be outputed.''')

pp_parser.add_argument('--burnin', default=0, type=int,
                       help='''How many samples from the start of the MCMC chain to discard as burnin. Default 0.''')

pp_parser.add_argument('--thin', default=1, type=int,
                       help='''How many samples to skip before saving one sample into the trace. Default 1.''')

pp_parser.set_defaults(func=post_process_trace)

#---------------------------------------------------------------------------------------------------------------------- 
args = parser.parse_args()

args.func(args)
